#!/bin/sh

name=tests
version=0.0.1
skip_pkg_check=yes
revision=1
source_dir="tests"
imagedeps="git build-essential"
hostdeps="gcc binutils libgcc-binaries"
deps="mlibc-headers mlibc freestnd-c-hdrs freestnd-cxx-hdrs libgcc"

build() {
    cp -pr "${source_dir}"/* .
    x86_64-salernos-mlibc-gcc runmany.c -O2 -o runmany
    x86_64-salernos-mlibc-gcc testpipe.c -O2 -o testpipe
    x86_64-salernos-mlibc-gcc loop.c -O2 -o loop
    x86_64-salernos-mlibc-gcc testclone.c -O2 -o testclone
    x86_64-salernos-mlibc-gcc testthreads.c -O2 -o testthreads
    x86_64-salernos-mlibc-gcc testjoin.c -O2 -o testjoin
    x86_64-salernos-mlibc-gcc testprocs.c -O2 -o testprocs
    x86_64-salernos-mlibc-gcc testalloc.c -O2 -o testalloc
    x86_64-salernos-mlibc-gcc -fno-delete-null-pointer-checks testnull.c -O2 -o testnull
    x86_64-salernos-mlibc-gcc testsig.c -O2 -o testsig
    x86_64-salernos-mlibc-gcc testfork.c -O2 -o testfork
    x86_64-salernos-mlibc-gcc testsigheavy.c -O2 -o testsigheavy
    x86_64-salernos-mlibc-gcc testcwd.c -O2 -o testcwd
    x86_64-salernos-mlibc-gcc testpty.c -O2 -o testpty
    x86_64-salernos-mlibc-gcc testsockbase.c -O2 -o testsockbase
    x86_64-salernos-mlibc-gcc testsock.c -O2 -o testsock
    x86_64-salernos-mlibc-gcc testalarm.c -O2 -o testalarm
    x86_64-salernos-mlibc-gcc testfb.c -O2 -o testfb
    x86_64-salernos-mlibc-gcc testlibfbdevhw.c -O2 -o testlibfbdevhw
    x86_64-salernos-mlibc-gcc testmouse.c -O2 -o testmouse
    x86_64-salernos-mlibc-gcc testkbd.c -O2 -o testkbd
}

package() {
    install_dir="${dest_dir}/root/tests"
    mkdir -p "${install_dir}"
    cp ./runmany "${install_dir}"
    cp ./testpipe "${install_dir}"
    cp ./loop "${install_dir}"
    cp ./testclone "${install_dir}"
    cp ./testthreads "${install_dir}"
    cp ./testjoin "${install_dir}"
    cp ./testprocs "${install_dir}"
    cp ./testalloc "${install_dir}"
    cp ./testnull "${install_dir}"
    cp ./testsig "${install_dir}"
    cp ./testfork "${install_dir}"
    cp ./testsigheavy "${install_dir}"
    cp ./testcwd "${install_dir}"
    cp ./testpty "${install_dir}"
    cp ./testsockbase "${install_dir}"
    cp ./testsock "${install_dir}"
    cp ./testalarm "${install_dir}"
    cp ./testfb "${install_dir}"
    cp ./testlibfbdevhw "${install_dir}"
    cp ./testmouse "${install_dir}"
    cp ./testkbd "${install_dir}"
}
